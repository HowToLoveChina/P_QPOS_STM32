; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\stm3210e-eval\usb_bot.o --asm_dir=.\STM3210E-EVAL\ --list_dir=.\STM3210E-EVAL\ --depend=.\stm3210e-eval\usb_bot.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\inc -I..\..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\Utilities\STM32_EVAL\STM3210E_EVAL -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\3.20.4\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210E_EVAL --omf_browse=.\stm3210e-eval\usb_bot.crf ..\src\usb_bot.c]
                          THUMB

                          AREA ||i.Bot_Abort||, CODE, READONLY, ALIGN=1

                  Bot_Abort PROC
;;;334    *******************************************************************************/
;;;335    void Bot_Abort(uint8_t Direction)
000000  b510              PUSH     {r4,lr}
;;;336    {
000002  4604              MOV      r4,r0
;;;337      switch (Direction)
000004  b124              CBZ      r4,|L1.16|
000006  2c01              CMP      r4,#1
000008  d007              BEQ      |L1.26|
00000a  2c02              CMP      r4,#2
00000c  d115              BNE      |L1.58|
00000e  e00a              B        |L1.38|
                  |L1.16|
;;;338      {
;;;339        case DIR_IN :
;;;340          SetEPTxStatus(ENDP1, EP_TX_STALL);
000010  2110              MOVS     r1,#0x10
000012  2001              MOVS     r0,#1
000014  f7fffffe          BL       SetEPTxStatus
;;;341          break;
000018  e010              B        |L1.60|
                  |L1.26|
;;;342        case DIR_OUT :
;;;343          SetEPRxStatus(ENDP2, EP_RX_STALL);
00001a  f44f5180          MOV      r1,#0x1000
00001e  2002              MOVS     r0,#2
000020  f7fffffe          BL       SetEPRxStatus
;;;344          break;
000024  e00a              B        |L1.60|
                  |L1.38|
;;;345        case BOTH_DIR :
;;;346          SetEPTxStatus(ENDP1, EP_TX_STALL);
000026  2110              MOVS     r1,#0x10
000028  2001              MOVS     r0,#1
00002a  f7fffffe          BL       SetEPTxStatus
;;;347          SetEPRxStatus(ENDP2, EP_RX_STALL);
00002e  f44f5180          MOV      r1,#0x1000
000032  2002              MOVS     r0,#2
000034  f7fffffe          BL       SetEPRxStatus
;;;348          break;
000038  e000              B        |L1.60|
                  |L1.58|
;;;349        default:
;;;350          break;
00003a  bf00              NOP      
                  |L1.60|
00003c  bf00              NOP                            ;341
;;;351      }
;;;352    }
00003e  bd10              POP      {r4,pc}
;;;353    
                          ENDP


                          AREA ||i.CBW_Decode||, CODE, READONLY, ALIGN=2

                  CBW_Decode PROC
;;;143    *******************************************************************************/
;;;144    void CBW_Decode(void)
000000  b510              PUSH     {r4,lr}
;;;145    {
;;;146      uint32_t Counter;
;;;147    
;;;148      for (Counter = 0; Counter < Data_Len; Counter++)
000002  2400              MOVS     r4,#0
000004  e004              B        |L2.16|
                  |L2.6|
;;;149      {
;;;150        *((uint8_t *)&CBW + Counter) = Bulk_Data_Buff[Counter];
000006  48ad              LDR      r0,|L2.700|
000008  5d00              LDRB     r0,[r0,r4]
00000a  49ad              LDR      r1,|L2.704|
00000c  5508              STRB     r0,[r1,r4]
00000e  1c64              ADDS     r4,r4,#1              ;148
                  |L2.16|
000010  48ac              LDR      r0,|L2.708|
000012  8800              LDRH     r0,[r0,#0]            ;148  ; Data_Len
000014  4284              CMP      r4,r0                 ;148
000016  d3f6              BCC      |L2.6|
;;;151      }
;;;152      CSW.dTag = CBW.dTag;
000018  48a9              LDR      r0,|L2.704|
00001a  6840              LDR      r0,[r0,#4]  ; CBW
00001c  49aa              LDR      r1,|L2.712|
00001e  6048              STR      r0,[r1,#4]  ; CSW
;;;153      CSW.dDataResidue = CBW.dDataLength;
000020  48a7              LDR      r0,|L2.704|
000022  6880              LDR      r0,[r0,#8]  ; CBW
000024  6088              STR      r0,[r1,#8]  ; CSW
;;;154      if (Data_Len != BOT_CBW_PACKET_LENGTH)
000026  48a7              LDR      r0,|L2.708|
000028  8800              LDRH     r0,[r0,#0]  ; Data_Len
00002a  281f              CMP      r0,#0x1f
00002c  d00f              BEQ      |L2.78|
;;;155      {
;;;156        Bot_Abort(BOTH_DIR);
00002e  2002              MOVS     r0,#2
000030  f7fffffe          BL       Bot_Abort
;;;157        /* reset the CBW.dSignature to disable the clear feature until receiving a Mass storage reset*/
;;;158        CBW.dSignature = 0;
000034  2000              MOVS     r0,#0
000036  49a2              LDR      r1,|L2.704|
000038  6008              STR      r0,[r1,#0]  ; CBW
;;;159        Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, PARAMETER_LIST_LENGTH_ERROR);
00003a  7b48              LDRB     r0,[r1,#0xd]  ; CBW
00003c  221a              MOVS     r2,#0x1a
00003e  2105              MOVS     r1,#5
000040  f7fffffe          BL       Set_Scsi_Sense_Data
;;;160        Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
000044  2100              MOVS     r1,#0
000046  2001              MOVS     r0,#1
000048  f7fffffe          BL       Set_CSW
                  |L2.76|
;;;161        return;
;;;162      }
;;;163    
;;;164      if ((CBW.CB[0] == SCSI_READ10 ) || (CBW.CB[0] == SCSI_WRITE10 ))
;;;165      {
;;;166        /* Calculate Logical Block Address */
;;;167        SCSI_LBA = (CBW.CB[2] << 24) | (CBW.CB[3] << 16) | (CBW.CB[4] <<  8) | CBW.CB[5];
;;;168        /* Calculate the Number of Blocks to transfer */
;;;169        SCSI_BlkLen = (CBW.CB[7] <<  8) | CBW.CB[8];
;;;170      }
;;;171    
;;;172      if (CBW.dSignature == BOT_CBW_SIGNATURE)
;;;173      {
;;;174        /* Valid CBW */
;;;175        if ((CBW.bLUN > Max_Lun) || (CBW.bCBLength < 1) || (CBW.bCBLength > 16))
;;;176        {
;;;177          Bot_Abort(BOTH_DIR);
;;;178          Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_FIELED_IN_COMMAND);
;;;179          Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
;;;180        }
;;;181        else
;;;182        {
;;;183          switch (CBW.CB[0])
;;;184          {
;;;185            case SCSI_REQUEST_SENSE:
;;;186              SCSI_RequestSense_Cmd (CBW.bLUN);
;;;187              break;
;;;188            case SCSI_INQUIRY:
;;;189              SCSI_Inquiry_Cmd(CBW.bLUN);
;;;190              break;
;;;191            case SCSI_START_STOP_UNIT:
;;;192              SCSI_Start_Stop_Unit_Cmd(CBW.bLUN);
;;;193              break;
;;;194            case SCSI_ALLOW_MEDIUM_REMOVAL:
;;;195              SCSI_Start_Stop_Unit_Cmd(CBW.bLUN);
;;;196              break;
;;;197            case SCSI_MODE_SENSE6:
;;;198              SCSI_ModeSense6_Cmd (CBW.bLUN);
;;;199              break;
;;;200            case SCSI_MODE_SENSE10:
;;;201              SCSI_ModeSense10_Cmd (CBW.bLUN);
;;;202              break;
;;;203            case SCSI_READ_FORMAT_CAPACITIES:
;;;204              SCSI_ReadFormatCapacity_Cmd(CBW.bLUN);
;;;205              break;
;;;206            case SCSI_READ_CAPACITY10:
;;;207              SCSI_ReadCapacity10_Cmd(CBW.bLUN);
;;;208              break;
;;;209            case SCSI_TEST_UNIT_READY:
;;;210              SCSI_TestUnitReady_Cmd(CBW.bLUN);
;;;211              break;
;;;212            case SCSI_READ10:
;;;213              SCSI_Read10_Cmd(CBW.bLUN, SCSI_LBA , SCSI_BlkLen);
;;;214              break;
;;;215            case SCSI_WRITE10:
;;;216              SCSI_Write10_Cmd(CBW.bLUN);
;;;217              break;
;;;218            case SCSI_VERIFY10:
;;;219              SCSI_Verify10_Cmd(CBW.bLUN);
;;;220              break;
;;;221            case SCSI_FORMAT_UNIT:
;;;222              SCSI_Format_Cmd(CBW.bLUN);
;;;223              break;
;;;224              /*Unsupported command*/
;;;225            case SCSI_MODE_SELECT10:
;;;226              SCSI_Mode_Select10_Cmd(CBW.bLUN);
;;;227              break;
;;;228            case SCSI_MODE_SELECT6:
;;;229              SCSI_Mode_Select6_Cmd(CBW.bLUN);
;;;230              break;
;;;231    
;;;232            case SCSI_SEND_DIAGNOSTIC:
;;;233              SCSI_Send_Diagnostic_Cmd(CBW.bLUN);
;;;234              break;
;;;235            case SCSI_READ6:
;;;236              SCSI_Read6_Cmd(CBW.bLUN);
;;;237              break;
;;;238            case SCSI_READ12:
;;;239              SCSI_Read12_Cmd(CBW.bLUN);
;;;240              break;
;;;241            case SCSI_READ16:
;;;242              SCSI_Read16_Cmd(CBW.bLUN);
;;;243              break;
;;;244            case SCSI_READ_CAPACITY16:
;;;245              SCSI_READ_CAPACITY16_Cmd(CBW.bLUN);
;;;246              break;
;;;247            case SCSI_WRITE6:
;;;248              SCSI_Write6_Cmd(CBW.bLUN);
;;;249              break;
;;;250            case SCSI_WRITE12:
;;;251              SCSI_Write12_Cmd(CBW.bLUN);
;;;252              break;
;;;253            case SCSI_WRITE16:
;;;254              SCSI_Write16_Cmd(CBW.bLUN);
;;;255              break;
;;;256            case SCSI_VERIFY12:
;;;257              SCSI_Verify12_Cmd(CBW.bLUN);
;;;258              break;
;;;259            case SCSI_VERIFY16:
;;;260              SCSI_Verify16_Cmd(CBW.bLUN);
;;;261              break;
;;;262    	case SCSI_READTOC:
;;;263    	   SCSI_ReadToc_Cmd(CBW.bLUN);
;;;264    	   break;
;;;265    	case SCSI_VENDER:
;;;266    		SCSI_Vender_Cmd(CBW.bLUN);
;;;267    		break;
;;;268            default:
;;;269            {
;;;270              Bot_Abort(BOTH_DIR);
;;;271              Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_COMMAND);
;;;272              Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
;;;273            }
;;;274          }
;;;275        }
;;;276      }
;;;277      else
;;;278      {
;;;279        /* Invalid CBW */
;;;280        Bot_Abort(BOTH_DIR);
;;;281        Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_COMMAND);
;;;282        Set_CSW (CSW_CMD_FAILED, SEND_CSW_DISABLE);
;;;283      }
;;;284    }
00004c  bd10              POP      {r4,pc}
                  |L2.78|
00004e  489c              LDR      r0,|L2.704|
000050  7bc0              LDRB     r0,[r0,#0xf]          ;164  ; CBW
000052  2828              CMP      r0,#0x28              ;164
000054  d003              BEQ      |L2.94|
000056  489a              LDR      r0,|L2.704|
000058  7bc0              LDRB     r0,[r0,#0xf]          ;164  ; CBW
00005a  282a              CMP      r0,#0x2a              ;164
00005c  d116              BNE      |L2.140|
                  |L2.94|
00005e  4898              LDR      r0,|L2.704|
000060  7c40              LDRB     r0,[r0,#0x11]         ;167
000062  0601              LSLS     r1,r0,#24             ;167
000064  4896              LDR      r0,|L2.704|
000066  7c80              LDRB     r0,[r0,#0x12]         ;167
000068  ea414100          ORR      r1,r1,r0,LSL #16      ;167
00006c  4894              LDR      r0,|L2.704|
00006e  7cc0              LDRB     r0,[r0,#0x13]         ;167
000070  ea412000          ORR      r0,r1,r0,LSL #8       ;167
000074  4992              LDR      r1,|L2.704|
000076  7d09              LDRB     r1,[r1,#0x14]         ;167
000078  4308              ORRS     r0,r0,r1              ;167
00007a  4994              LDR      r1,|L2.716|
00007c  6008              STR      r0,[r1,#0]            ;167  ; SCSI_LBA
00007e  4890              LDR      r0,|L2.704|
000080  7dc1              LDRB     r1,[r0,#0x17]         ;169
000082  7d80              LDRB     r0,[r0,#0x16]         ;169
000084  ea412000          ORR      r0,r1,r0,LSL #8       ;169
000088  4991              LDR      r1,|L2.720|
00008a  6008              STR      r0,[r1,#0]            ;169  ; SCSI_BlkLen
                  |L2.140|
00008c  488c              LDR      r0,|L2.704|
00008e  6800              LDR      r0,[r0,#0]            ;172  ; CBW
000090  4990              LDR      r1,|L2.724|
000092  4288              CMP      r0,r1                 ;172
000094  d172              BNE      |L2.380|
000096  488a              LDR      r0,|L2.704|
000098  7b40              LDRB     r0,[r0,#0xd]          ;175  ; CBW
00009a  498f              LDR      r1,|L2.728|
00009c  6809              LDR      r1,[r1,#0]            ;175  ; Max_Lun
00009e  4288              CMP      r0,r1                 ;175
0000a0  d807              BHI      |L2.178|
0000a2  4887              LDR      r0,|L2.704|
0000a4  7b80              LDRB     r0,[r0,#0xe]          ;175  ; CBW
0000a6  2801              CMP      r0,#1                 ;175
0000a8  db03              BLT      |L2.178|
0000aa  4885              LDR      r0,|L2.704|
0000ac  7b80              LDRB     r0,[r0,#0xe]          ;175  ; CBW
0000ae  2810              CMP      r0,#0x10              ;175
0000b0  dd0d              BLE      |L2.206|
                  |L2.178|
0000b2  2002              MOVS     r0,#2                 ;177
0000b4  f7fffffe          BL       Bot_Abort
0000b8  4981              LDR      r1,|L2.704|
0000ba  7b48              LDRB     r0,[r1,#0xd]          ;178  ; CBW
0000bc  2224              MOVS     r2,#0x24              ;178
0000be  2105              MOVS     r1,#5                 ;178
0000c0  f7fffffe          BL       Set_Scsi_Sense_Data
0000c4  2100              MOVS     r1,#0                 ;179
0000c6  2001              MOVS     r0,#1                 ;179
0000c8  f7fffffe          BL       Set_CSW
0000cc  e0f3              B        |L2.694|
                  |L2.206|
0000ce  487c              LDR      r0,|L2.704|
0000d0  7bc0              LDRB     r0,[r0,#0xf]          ;183  ; CBW
0000d2  2828              CMP      r0,#0x28              ;183
0000d4  d06c              BEQ      |L2.432|
0000d6  dc1c              BGT      |L2.274|
0000d8  2815              CMP      r0,#0x15              ;183
0000da  d072              BEQ      |L2.450|
0000dc  dc0e              BGT      |L2.252|
0000de  2808              CMP      r0,#8                 ;183
0000e0  d070              BEQ      |L2.452|
0000e2  dc06              BGT      |L2.242|
0000e4  2800              CMP      r0,#0                 ;183
0000e6  d05e              BEQ      |L2.422|
0000e8  2803              CMP      r0,#3                 ;183
0000ea  d033              BEQ      |L2.340|
0000ec  2804              CMP      r0,#4                 ;183
                  |L2.238|
0000ee  d16a              BNE      |L2.454|
0000f0  e075              B        |L2.478|
                  |L2.242|
0000f2  280a              CMP      r0,#0xa               ;183
0000f4  d068              BEQ      |L2.456|
0000f6  2812              CMP      r0,#0x12              ;183
0000f8  d1f9              BNE      |L2.238|
0000fa  e030              B        |L2.350|
                  |L2.252|
0000fc  381a              SUBS     r0,r0,#0x1a           ;183
0000fe  280c              CMP      r0,#0xc               ;183
000100  d261              BCS      |L2.454|
000102  e8dff000          TBB      [pc,r0]               ;183
000106  3c31              DCB      0x3c,0x31
000108  bc7c36bc          DCB      0xbc,0x7c,0x36,0xbc
00010c  bcbcbc46          DCB      0xbc,0xbc,0xbc,0x46
000110  bc4b              DCB      0xbc,0x4b
                  |L2.274|
000112  288a              CMP      r0,#0x8a              ;183
000114  d072              BEQ      |L2.508|
000116  dc0e              BGT      |L2.310|
000118  2855              CMP      r0,#0x55              ;183
00011a  d065              BEQ      |L2.488|
00011c  dc06              BGT      |L2.300|
00011e  282a              CMP      r0,#0x2a              ;183
000120  d053              BEQ      |L2.458|
000122  282f              CMP      r0,#0x2f              ;183
000124  d056              BEQ      |L2.468|
000126  2843              CMP      r0,#0x43              ;183
000128  d1e1              BNE      |L2.238|
00012a  e09e              B        |L2.618|
                  |L2.300|
00012c  285a              CMP      r0,#0x5a              ;183
00012e  d02b              BEQ      |L2.392|
000130  2888              CMP      r0,#0x88              ;183
000132  d1dc              BNE      |L2.238|
000134  e076              B        |L2.548|
                  |L2.310|
000136  28aa              CMP      r0,#0xaa              ;183
000138  d070              BEQ      |L2.540|
00013a  dc06              BGT      |L2.330|
00013c  288f              CMP      r0,#0x8f              ;183
00013e  d06e              BEQ      |L2.542|
000140  289e              CMP      r0,#0x9e              ;183
000142  d074              BEQ      |L2.558|
000144  28a8              CMP      r0,#0xa8              ;183
000146  d1d2              BNE      |L2.238|
000148  e063              B        |L2.530|
                  |L2.330|
00014a  28af              CMP      r0,#0xaf              ;183
00014c  d069              BEQ      |L2.546|
00014e  28ff              CMP      r0,#0xff              ;183
000150  d1cd              BNE      |L2.238|
000152  e08f              B        |L2.628|
                  |L2.340|
000154  495a              LDR      r1,|L2.704|
000156  7b48              LDRB     r0,[r1,#0xd]          ;186  ; CBW
000158  f7fffffe          BL       SCSI_RequestSense_Cmd
00015c  e09d              B        |L2.666|
                  |L2.350|
00015e  4958              LDR      r1,|L2.704|
000160  7b48              LDRB     r0,[r1,#0xd]          ;189  ; CBW
000162  f7fffffe          BL       SCSI_Inquiry_Cmd
000166  e098              B        |L2.666|
000168  4955              LDR      r1,|L2.704|
00016a  7b48              LDRB     r0,[r1,#0xd]          ;192  ; CBW
00016c  f7fffffe          BL       SCSI_Start_Stop_Unit_Cmd
000170  e093              B        |L2.666|
000172  4953              LDR      r1,|L2.704|
000174  7b48              LDRB     r0,[r1,#0xd]          ;195  ; CBW
000176  f7fffffe          BL       SCSI_Start_Stop_Unit_Cmd
00017a  e08e              B        |L2.666|
                  |L2.380|
00017c  e08e              B        |L2.668|
00017e  4950              LDR      r1,|L2.704|
000180  7b48              LDRB     r0,[r1,#0xd]          ;198  ; CBW
000182  f7fffffe          BL       SCSI_ModeSense6_Cmd
000186  e088              B        |L2.666|
                  |L2.392|
000188  494d              LDR      r1,|L2.704|
00018a  7b48              LDRB     r0,[r1,#0xd]          ;201  ; CBW
00018c  f7fffffe          BL       SCSI_ModeSense10_Cmd
000190  e083              B        |L2.666|
000192  494b              LDR      r1,|L2.704|
000194  7b48              LDRB     r0,[r1,#0xd]          ;204  ; CBW
000196  f7fffffe          BL       SCSI_ReadFormatCapacity_Cmd
00019a  e07e              B        |L2.666|
00019c  4948              LDR      r1,|L2.704|
00019e  7b48              LDRB     r0,[r1,#0xd]          ;207  ; CBW
0001a0  f7fffffe          BL       SCSI_ReadCapacity10_Cmd
0001a4  e079              B        |L2.666|
                  |L2.422|
0001a6  4946              LDR      r1,|L2.704|
0001a8  7b48              LDRB     r0,[r1,#0xd]          ;210  ; CBW
0001aa  f7fffffe          BL       SCSI_TestUnitReady_Cmd
0001ae  e074              B        |L2.666|
                  |L2.432|
0001b0  4943              LDR      r1,|L2.704|
0001b2  7b48              LDRB     r0,[r1,#0xd]          ;213  ; CBW
0001b4  4946              LDR      r1,|L2.720|
0001b6  680a              LDR      r2,[r1,#0]            ;213  ; SCSI_BlkLen
0001b8  4944              LDR      r1,|L2.716|
0001ba  6809              LDR      r1,[r1,#0]            ;213  ; SCSI_LBA
0001bc  f7fffffe          BL       SCSI_Read10_Cmd
0001c0  e06b              B        |L2.666|
                  |L2.450|
0001c2  e016              B        |L2.498|
                  |L2.452|
0001c4  e020              B        |L2.520|
                  |L2.454|
0001c6  e05a              B        |L2.638|
                  |L2.456|
0001c8  e036              B        |L2.568|
                  |L2.458|
0001ca  493d              LDR      r1,|L2.704|
0001cc  7b48              LDRB     r0,[r1,#0xd]          ;216  ; CBW
0001ce  f7fffffe          BL       SCSI_Invalid_Cmd
0001d2  e062              B        |L2.666|
                  |L2.468|
0001d4  493a              LDR      r1,|L2.704|
0001d6  7b48              LDRB     r0,[r1,#0xd]          ;219  ; CBW
0001d8  f7fffffe          BL       SCSI_Verify10_Cmd
0001dc  e05d              B        |L2.666|
                  |L2.478|
0001de  4938              LDR      r1,|L2.704|
0001e0  7b48              LDRB     r0,[r1,#0xd]          ;222  ; CBW
0001e2  f7fffffe          BL       SCSI_Format_Cmd
0001e6  e058              B        |L2.666|
                  |L2.488|
0001e8  4935              LDR      r1,|L2.704|
0001ea  7b48              LDRB     r0,[r1,#0xd]          ;226  ; CBW
0001ec  f7fffffe          BL       SCSI_Invalid_Cmd
0001f0  e053              B        |L2.666|
                  |L2.498|
0001f2  4933              LDR      r1,|L2.704|
0001f4  7b48              LDRB     r0,[r1,#0xd]          ;229  ; CBW
0001f6  f7fffffe          BL       SCSI_Invalid_Cmd
0001fa  e04e              B        |L2.666|
                  |L2.508|
0001fc  e026              B        |L2.588|
0001fe  4930              LDR      r1,|L2.704|
000200  7b48              LDRB     r0,[r1,#0xd]          ;233  ; CBW
000202  f7fffffe          BL       SCSI_Invalid_Cmd
000206  e048              B        |L2.666|
                  |L2.520|
000208  492d              LDR      r1,|L2.704|
00020a  7b48              LDRB     r0,[r1,#0xd]          ;236  ; CBW
00020c  f7fffffe          BL       SCSI_Invalid_Cmd
000210  e043              B        |L2.666|
                  |L2.530|
000212  492b              LDR      r1,|L2.704|
000214  7b48              LDRB     r0,[r1,#0xd]          ;239  ; CBW
000216  f7fffffe          BL       SCSI_Invalid_Cmd
00021a  e03e              B        |L2.666|
                  |L2.540|
00021c  e011              B        |L2.578|
                  |L2.542|
00021e  e01f              B        |L2.608|
000220  e005              B        |L2.558|
                  |L2.546|
000222  e018              B        |L2.598|
                  |L2.548|
000224  4926              LDR      r1,|L2.704|
000226  7b48              LDRB     r0,[r1,#0xd]          ;242  ; CBW
000228  f7fffffe          BL       SCSI_Invalid_Cmd
00022c  e035              B        |L2.666|
                  |L2.558|
00022e  4924              LDR      r1,|L2.704|
000230  7b48              LDRB     r0,[r1,#0xd]          ;245  ; CBW
000232  f7fffffe          BL       SCSI_Invalid_Cmd
000236  e030              B        |L2.666|
                  |L2.568|
000238  4921              LDR      r1,|L2.704|
00023a  7b48              LDRB     r0,[r1,#0xd]          ;248  ; CBW
00023c  f7fffffe          BL       SCSI_Invalid_Cmd
000240  e02b              B        |L2.666|
                  |L2.578|
000242  491f              LDR      r1,|L2.704|
000244  7b48              LDRB     r0,[r1,#0xd]          ;251  ; CBW
000246  f7fffffe          BL       SCSI_Invalid_Cmd
00024a  e026              B        |L2.666|
                  |L2.588|
00024c  491c              LDR      r1,|L2.704|
00024e  7b48              LDRB     r0,[r1,#0xd]          ;254  ; CBW
000250  f7fffffe          BL       SCSI_Invalid_Cmd
000254  e021              B        |L2.666|
                  |L2.598|
000256  491a              LDR      r1,|L2.704|
000258  7b48              LDRB     r0,[r1,#0xd]          ;257  ; CBW
00025a  f7fffffe          BL       SCSI_Invalid_Cmd
00025e  e01c              B        |L2.666|
                  |L2.608|
000260  4917              LDR      r1,|L2.704|
000262  7b48              LDRB     r0,[r1,#0xd]          ;260  ; CBW
000264  f7fffffe          BL       SCSI_Invalid_Cmd
000268  e017              B        |L2.666|
                  |L2.618|
00026a  4915              LDR      r1,|L2.704|
00026c  7b48              LDRB     r0,[r1,#0xd]          ;263  ; CBW
00026e  f7fffffe          BL       SCSI_Invalid_Cmd
000272  e012              B        |L2.666|
                  |L2.628|
000274  4912              LDR      r1,|L2.704|
000276  7b48              LDRB     r0,[r1,#0xd]          ;266  ; CBW
000278  f7fffffe          BL       SCSI_Vender_Cmd
00027c  e00d              B        |L2.666|
                  |L2.638|
00027e  2002              MOVS     r0,#2                 ;270
000280  f7fffffe          BL       Bot_Abort
000284  490e              LDR      r1,|L2.704|
000286  7b48              LDRB     r0,[r1,#0xd]          ;271  ; CBW
000288  2220              MOVS     r2,#0x20              ;271
00028a  2105              MOVS     r1,#5                 ;271
00028c  f7fffffe          BL       Set_Scsi_Sense_Data
000290  2100              MOVS     r1,#0                 ;272
000292  2001              MOVS     r0,#1                 ;272
000294  f7fffffe          BL       Set_CSW
000298  bf00              NOP                            ;183
                  |L2.666|
00029a  e00c              B        |L2.694|
                  |L2.668|
00029c  2002              MOVS     r0,#2                 ;280
00029e  f7fffffe          BL       Bot_Abort
0002a2  4907              LDR      r1,|L2.704|
0002a4  7b48              LDRB     r0,[r1,#0xd]          ;281  ; CBW
0002a6  2220              MOVS     r2,#0x20              ;281
0002a8  2105              MOVS     r1,#5                 ;281
0002aa  f7fffffe          BL       Set_Scsi_Sense_Data
0002ae  2100              MOVS     r1,#0                 ;282
0002b0  2001              MOVS     r0,#1                 ;282
0002b2  f7fffffe          BL       Set_CSW
                  |L2.694|
0002b6  bf00              NOP      
0002b8  e6c8              B        |L2.76|
;;;285    
                          ENDP

0002ba  0000              DCW      0x0000
                  |L2.700|
                          DCD      Bulk_Data_Buff
                  |L2.704|
                          DCD      ||CBW||
                  |L2.708|
                          DCD      Data_Len
                  |L2.712|
                          DCD      ||CSW||
                  |L2.716|
                          DCD      SCSI_LBA
                  |L2.720|
                          DCD      SCSI_BlkLen
                  |L2.724|
                          DCD      0x43425355
                  |L2.728|
                          DCD      Max_Lun

                          AREA ||i.Mass_Storage_In||, CODE, READONLY, ALIGN=2

                  Mass_Storage_In PROC
;;;61     *******************************************************************************/
;;;62     void Mass_Storage_In (void)
000000  b510              PUSH     {r4,lr}
;;;63     {
;;;64       switch (Bot_State)
000002  4822              LDR      r0,|L3.140|
000004  7800              LDRB     r0,[r0,#0]  ; Bot_State
000006  2802              CMP      r0,#2
000008  d01b              BEQ      |L3.66|
00000a  2803              CMP      r0,#3
00000c  d030              BEQ      |L3.112|
00000e  2804              CMP      r0,#4
000010  d002              BEQ      |L3.24|
000012  2805              CMP      r0,#5
000014  d136              BNE      |L3.132|
000016  e000              B        |L3.26|
                  |L3.24|
;;;65       {
;;;66         case BOT_CSW_Send:
;;;67         case BOT_ERROR:
000018  bf00              NOP      
                  |L3.26|
;;;68           Bot_State = BOT_IDLE;
00001a  2000              MOVS     r0,#0
00001c  491b              LDR      r1,|L3.140|
00001e  7008              STRB     r0,[r1,#0]
;;;69           SetEPRxStatus(ENDP2, EP_RX_VALID);/* enable the Endpoint to receive the next cmd*/
000020  f44f5140          MOV      r1,#0x3000
000024  2002              MOVS     r0,#2
000026  f7fffffe          BL       SetEPRxStatus
;;;70           if (GetEPRxStatus(EP2_OUT) == EP_RX_STALL)
00002a  2002              MOVS     r0,#2
00002c  f7fffffe          BL       GetEPRxStatus
000030  f5b05f80          CMP      r0,#0x1000
000034  d104              BNE      |L3.64|
;;;71           {
;;;72             SetEPRxStatus(EP2_OUT, EP_RX_VALID);/* enable the Endpoint to receive the next cmd*/
000036  f44f5140          MOV      r1,#0x3000
00003a  2002              MOVS     r0,#2
00003c  f7fffffe          BL       SetEPRxStatus
                  |L3.64|
;;;73           }
;;;74           break;
000040  e021              B        |L3.134|
                  |L3.66|
;;;75         case BOT_DATA_IN:
;;;76           switch (CBW.CB[0])
000042  4813              LDR      r0,|L3.144|
000044  7bc0              LDRB     r0,[r0,#0xf]  ; CBW
000046  2828              CMP      r0,#0x28
000048  d002              BEQ      |L3.80|
00004a  28ff              CMP      r0,#0xff
00004c  d10e              BNE      |L3.108|
00004e  e008              B        |L3.98|
                  |L3.80|
;;;77           {
;;;78             case SCSI_READ10:
;;;79               SCSI_Read10_Cmd(CBW.bLUN , SCSI_LBA , SCSI_BlkLen);
000050  490f              LDR      r1,|L3.144|
000052  7b48              LDRB     r0,[r1,#0xd]  ; CBW
000054  490f              LDR      r1,|L3.148|
000056  680a              LDR      r2,[r1,#0]  ; SCSI_BlkLen
000058  490f              LDR      r1,|L3.152|
00005a  6809              LDR      r1,[r1,#0]  ; SCSI_LBA
00005c  f7fffffe          BL       SCSI_Read10_Cmd
;;;80               break;
000060  e004              B        |L3.108|
                  |L3.98|
;;;81     	case SCSI_VENDER:
;;;82     		SCSI_Vender_Cmd(CBW.bLUN);
000062  490b              LDR      r1,|L3.144|
000064  7b48              LDRB     r0,[r1,#0xd]  ; CBW
000066  f7fffffe          BL       SCSI_Vender_Cmd
;;;83     		break;
00006a  bf00              NOP      
                  |L3.108|
00006c  bf00              NOP                            ;80
;;;84           }
;;;85           break;
00006e  e00a              B        |L3.134|
                  |L3.112|
;;;86         case BOT_DATA_IN_LAST:
;;;87           Set_CSW (CSW_CMD_PASSED, SEND_CSW_ENABLE);
000070  2101              MOVS     r1,#1
000072  2000              MOVS     r0,#0
000074  f7fffffe          BL       Set_CSW
;;;88     
;;;89           SetEPRxStatus(ENDP2, EP_RX_VALID);
000078  f44f5140          MOV      r1,#0x3000
00007c  2002              MOVS     r0,#2
00007e  f7fffffe          BL       SetEPRxStatus
;;;90           break;
000082  e000              B        |L3.134|
                  |L3.132|
;;;91         default:
;;;92           break;
000084  bf00              NOP      
                  |L3.134|
000086  bf00              NOP                            ;74
;;;93       }
;;;94     
;;;95     
;;;96       
;;;97     }
000088  bd10              POP      {r4,pc}
;;;98     
                          ENDP

00008a  0000              DCW      0x0000
                  |L3.140|
                          DCD      Bot_State
                  |L3.144|
                          DCD      ||CBW||
                  |L3.148|
                          DCD      SCSI_BlkLen
                  |L3.152|
                          DCD      SCSI_LBA

                          AREA ||i.Mass_Storage_Out||, CODE, READONLY, ALIGN=2

                  Mass_Storage_Out PROC
;;;105    *******************************************************************************/
;;;106    void Mass_Storage_Out (void)
000000  b510              PUSH     {r4,lr}
;;;107    {
;;;108    	uint8_t CMD;
;;;109    	CMD = CBW.CB[0];
000002  481b              LDR      r0,|L4.112|
000004  7bc4              LDRB     r4,[r0,#0xf]  ; CBW
;;;110    
;;;111      Data_Len = USB_SIL_Read(EP2_OUT, Bulk_Data_Buff);
000006  491b              LDR      r1,|L4.116|
000008  2002              MOVS     r0,#2
00000a  f7fffffe          BL       USB_SIL_Read
00000e  491a              LDR      r1,|L4.120|
000010  8008              STRH     r0,[r1,#0]
;;;112    
;;;113      switch (Bot_State)
000012  481a              LDR      r0,|L4.124|
000014  7800              LDRB     r0,[r0,#0]  ; Bot_State
000016  b110              CBZ      r0,|L4.30|
000018  2801              CMP      r0,#1
00001a  d118              BNE      |L4.78|
00001c  e002              B        |L4.36|
                  |L4.30|
;;;114      {
;;;115        case BOT_IDLE:
;;;116          CBW_Decode();
00001e  f7fffffe          BL       CBW_Decode
;;;117          break;
000022  e022              B        |L4.106|
                  |L4.36|
;;;118        case BOT_DATA_OUT:
;;;119    		if (CMD == SCSI_VENDER)
000024  2cff              CMP      r4,#0xff
000026  d104              BNE      |L4.50|
;;;120    	      {
;;;121    	        SCSI_Vender_Cmd(CBW.bLUN);
000028  4911              LDR      r1,|L4.112|
00002a  7b48              LDRB     r0,[r1,#0xd]  ; CBW
00002c  f7fffffe          BL       SCSI_Vender_Cmd
;;;122    	        break;
000030  e01b              B        |L4.106|
                  |L4.50|
;;;123    	      }
;;;124          Bot_Abort(DIR_OUT);
000032  2001              MOVS     r0,#1
000034  f7fffffe          BL       Bot_Abort
;;;125          Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_FIELED_IN_COMMAND);
000038  490d              LDR      r1,|L4.112|
00003a  7b48              LDRB     r0,[r1,#0xd]  ; CBW
00003c  2224              MOVS     r2,#0x24
00003e  2105              MOVS     r1,#5
000040  f7fffffe          BL       Set_Scsi_Sense_Data
;;;126          Set_CSW (CSW_PHASE_ERROR, SEND_CSW_DISABLE);
000044  2100              MOVS     r1,#0
000046  2002              MOVS     r0,#2
000048  f7fffffe          BL       Set_CSW
;;;127          break;
00004c  e00d              B        |L4.106|
                  |L4.78|
;;;128        default:
;;;129          Bot_Abort(BOTH_DIR);
00004e  2002              MOVS     r0,#2
000050  f7fffffe          BL       Bot_Abort
;;;130          Set_Scsi_Sense_Data(CBW.bLUN, ILLEGAL_REQUEST, INVALID_FIELED_IN_COMMAND);
000054  4906              LDR      r1,|L4.112|
000056  7b48              LDRB     r0,[r1,#0xd]  ; CBW
000058  2224              MOVS     r2,#0x24
00005a  2105              MOVS     r1,#5
00005c  f7fffffe          BL       Set_Scsi_Sense_Data
;;;131          Set_CSW (CSW_PHASE_ERROR, SEND_CSW_DISABLE);
000060  2100              MOVS     r1,#0
000062  2002              MOVS     r0,#2
000064  f7fffffe          BL       Set_CSW
;;;132          break;
000068  bf00              NOP      
                  |L4.106|
00006a  bf00              NOP                            ;117
;;;133      }
;;;134    }
00006c  bd10              POP      {r4,pc}
;;;135    
                          ENDP

00006e  0000              DCW      0x0000
                  |L4.112|
                          DCD      ||CBW||
                  |L4.116|
                          DCD      Bulk_Data_Buff
                  |L4.120|
                          DCD      Data_Len
                  |L4.124|
                          DCD      Bot_State

                          AREA ||i.Set_CSW||, CODE, READONLY, ALIGN=2

                  Set_CSW PROC
;;;312    *******************************************************************************/
;;;313    void Set_CSW (uint8_t CSW_Status, uint8_t Send_Permission)
000000  b570              PUSH     {r4-r6,lr}
;;;314    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;315      CSW.dSignature = BOT_CSW_SIGNATURE;
000006  480a              LDR      r0,|L5.48|
000008  490a              LDR      r1,|L5.52|
00000a  6008              STR      r0,[r1,#0]  ; CSW
;;;316      CSW.bStatus = CSW_Status;
00000c  4608              MOV      r0,r1
00000e  7305              STRB     r5,[r0,#0xc]
;;;317    
;;;318      USB_SIL_Write(EP1_IN, ((uint8_t *)& CSW), CSW_DATA_LENGTH);
000010  220d              MOVS     r2,#0xd
000012  2081              MOVS     r0,#0x81
000014  f7fffffe          BL       USB_SIL_Write
;;;319    
;;;320      Bot_State = BOT_ERROR;
000018  2005              MOVS     r0,#5
00001a  4907              LDR      r1,|L5.56|
00001c  7008              STRB     r0,[r1,#0]
;;;321      if (Send_Permission)
00001e  b12c              CBZ      r4,|L5.44|
;;;322      {
;;;323        Bot_State = BOT_CSW_Send;
000020  2004              MOVS     r0,#4
000022  7008              STRB     r0,[r1,#0]
;;;324        SetEPTxStatus(ENDP1, EP_TX_VALID);
000024  2130              MOVS     r1,#0x30
000026  2001              MOVS     r0,#1
000028  f7fffffe          BL       SetEPTxStatus
                  |L5.44|
;;;325      }
;;;326    }
00002c  bd70              POP      {r4-r6,pc}
;;;327    
                          ENDP

00002e  0000              DCW      0x0000
                  |L5.48|
                          DCD      0x53425355
                  |L5.52|
                          DCD      ||CSW||
                  |L5.56|
                          DCD      Bot_State

                          AREA ||i.Transfer_Data_Request||, CODE, READONLY, ALIGN=2

                  Transfer_Data_Request PROC
;;;293    *******************************************************************************/
;;;294    void Transfer_Data_Request(uint8_t* Data_Pointer, uint16_t Data_Len)
000000  b570              PUSH     {r4-r6,lr}
;;;295    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;296      USB_SIL_Write(EP1_IN, Data_Pointer, Data_Len);
000006  4622              MOV      r2,r4
000008  4629              MOV      r1,r5
00000a  2081              MOVS     r0,#0x81
00000c  f7fffffe          BL       USB_SIL_Write
;;;297    
;;;298        SetEPTxStatus(ENDP1, EP_TX_VALID);
000010  2130              MOVS     r1,#0x30
000012  2001              MOVS     r0,#1
000014  f7fffffe          BL       SetEPTxStatus
;;;299        
;;;300      Bot_State = BOT_DATA_IN_LAST;
000018  2003              MOVS     r0,#3
00001a  4905              LDR      r1,|L6.48|
00001c  7008              STRB     r0,[r1,#0]
;;;301      CSW.dDataResidue -= Data_Len;
00001e  4805              LDR      r0,|L6.52|
000020  6880              LDR      r0,[r0,#8]  ; CSW
000022  1b00              SUBS     r0,r0,r4
000024  4903              LDR      r1,|L6.52|
000026  6088              STR      r0,[r1,#8]  ; CSW
;;;302      CSW.bStatus = CSW_CMD_PASSED;
000028  2000              MOVS     r0,#0
00002a  7308              STRB     r0,[r1,#0xc]
;;;303    }
00002c  bd70              POP      {r4-r6,pc}
;;;304    
                          ENDP

00002e  0000              DCW      0x0000
                  |L6.48|
                          DCD      Bot_State
                  |L6.52|
                          DCD      ||CSW||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  Bulk_Data_Buff
                          %        2048
                  ||CBW||
                          %        32
                  ||CSW||
                          %        16

                          AREA ||.data||, DATA, ALIGN=2

                  Bot_State
000000  0000              DCB      0x00,0x00
                  Data_Len
000002  0000              DCB      0x00,0x00
                  SCSI_LBA
                          DCD      0x00000000
                  SCSI_BlkLen
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\src\\usb_bot.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_usb_bot_c_ca1b73ef____REV16|
#line 129 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\3.20.4\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_usb_bot_c_ca1b73ef____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_usb_bot_c_ca1b73ef____REVSH|
#line 144
|__asm___9_usb_bot_c_ca1b73ef____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
