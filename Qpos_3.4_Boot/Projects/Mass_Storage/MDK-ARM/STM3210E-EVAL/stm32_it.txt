; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\stm3210e-eval\stm32_it.o --asm_dir=.\STM3210E-EVAL\ --list_dir=.\STM3210E-EVAL\ --depend=.\stm3210e-eval\stm32_it.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\inc -I..\..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\..\Utilities\STM32_EVAL -I..\..\..\Utilities\STM32_EVAL\Common -I..\..\..\Utilities\STM32_EVAL\STM3210E_EVAL -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\3.20.4\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210E_EVAL --omf_browse=.\stm3210e-eval\stm32_it.crf ..\src\stm32_it.c]
                          THUMB

                          AREA ||i.BusFault_Handler||, CODE, READONLY, ALIGN=1

                  BusFault_Handler PROC
;;;96     *******************************************************************************/
;;;97     void BusFault_Handler(void)
000000  bf00              NOP      
                  |L1.2|
;;;98     {
;;;99       /* Go to infinite loop when Bus Fault exception occurs */
;;;100      while (1)
000002  e7fe              B        |L1.2|
;;;101      {
;;;102      }
;;;103    }
;;;104    
                          ENDP


                          AREA ||i.DMA2_Channel4_5_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMA2_Channel4_5_IRQHandler PROC
;;;213    
;;;214    void SD_SDIO_DMA_IRQHANDLER(void)
000000  4770              BX       lr
;;;215    {
;;;216      /* Process DMA2 Stream3 or DMA2 Stream6 Interrupt Sources */
;;;217      //SD_ProcessDMAIRQ();
;;;218    }
;;;219    
                          ENDP


                          AREA ||i.DebugMon_Handler||, CODE, READONLY, ALIGN=1

                  DebugMon_Handler PROC
;;;137    *******************************************************************************/
;;;138    void DebugMon_Handler(void)
000000  4770              BX       lr
;;;139    {
;;;140    }
;;;141    
                          ENDP


                          AREA ||i.HardFault_Handler||, CODE, READONLY, ALIGN=1

                  HardFault_Handler PROC
;;;66     *******************************************************************************/
;;;67     void HardFault_Handler(void)
000000  bf00              NOP      
                  |L4.2|
;;;68     {
;;;69       /* Go to infinite loop when Hard Fault exception occurs */
;;;70       while (1)
000002  e7fe              B        |L4.2|
;;;71       {
;;;72       }
;;;73     }
;;;74     
                          ENDP


                          AREA ||i.MemManage_Handler||, CODE, READONLY, ALIGN=1

                  MemManage_Handler PROC
;;;81     *******************************************************************************/
;;;82     void MemManage_Handler(void)
000000  bf00              NOP      
                  |L5.2|
;;;83     {
;;;84       /* Go to infinite loop when Memory Manage exception occurs */
;;;85       while (1)
000002  e7fe              B        |L5.2|
;;;86       {
;;;87       }
;;;88     }
;;;89     
                          ENDP


                          AREA ||i.NMI_Handler||, CODE, READONLY, ALIGN=1

                  NMI_Handler PROC
;;;55     *******************************************************************************/
;;;56     void NMI_Handler(void)
000000  4770              BX       lr
;;;57     {
;;;58     }
;;;59     
                          ENDP


                          AREA ||i.PendSV_Handler||, CODE, READONLY, ALIGN=1

                  PendSV_Handler PROC
;;;148    *******************************************************************************/
;;;149    void PendSV_Handler(void)
000000  4770              BX       lr
;;;150    {
;;;151    }
;;;152    
                          ENDP


                          AREA ||i.SDIO_IRQHandler||, CODE, READONLY, ALIGN=1

                  SDIO_IRQHandler PROC
;;;206    *******************************************************************************/
;;;207    void SDIO_IRQHandler(void)
000000  4770              BX       lr
;;;208    { 
;;;209      /* Process All SDIO Interrupt Sources */
;;;210      //SD_ProcessIRQSrc();
;;;211      
;;;212    }
;;;213    
                          ENDP


                          AREA ||i.SVC_Handler||, CODE, READONLY, ALIGN=1

                  SVC_Handler PROC
;;;126    *******************************************************************************/
;;;127    void SVC_Handler(void)
000000  4770              BX       lr
;;;128    {
;;;129    }
;;;130    
                          ENDP


                          AREA ||i.SysTick_Handler||, CODE, READONLY, ALIGN=1

                  SysTick_Handler PROC
;;;159    *******************************************************************************/
;;;160    void SysTick_Handler(void)
000000  4770              BX       lr
;;;161    {
;;;162    }
;;;163    
                          ENDP


                          AREA ||i.USBWakeUp_IRQHandler||, CODE, READONLY, ALIGN=1

                  USBWakeUp_IRQHandler PROC
;;;231    #else
;;;232    void USBWakeUp_IRQHandler(void)
000000  4770              BX       lr
;;;233    #endif
;;;234    {
;;;235     // EXTI_ClearITPendingBit(EXTI_Line18);
;;;236    }
;;;237    
                          ENDP


                          AREA ||i.USB_HP_CAN1_TX_IRQHandler||, CODE, READONLY, ALIGN=1

                  USB_HP_CAN1_TX_IRQHandler PROC
;;;175    *******************************************************************************/
;;;176    void USB_HP_CAN1_TX_IRQHandler(void)
000000  4770              BX       lr
;;;177    {
;;;178      //CTR_HP();
;;;179    }
;;;180    
                          ENDP


                          AREA ||i.USB_LP_CAN1_RX0_IRQHandler||, CODE, READONLY, ALIGN=1

                  USB_LP_CAN1_RX0_IRQHandler PROC
;;;191    #else
;;;192    void USB_LP_CAN1_RX0_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;193    #endif
;;;194    {
;;;195      USB_Istr();
000002  f7fffffe          BL       USB_Istr
;;;196    }
000006  bd10              POP      {r4,pc}
;;;197    
                          ENDP


                          AREA ||i.UsageFault_Handler||, CODE, READONLY, ALIGN=1

                  UsageFault_Handler PROC
;;;111    *******************************************************************************/
;;;112    void UsageFault_Handler(void)
000000  bf00              NOP      
                  |L14.2|
;;;113    {
;;;114      /* Go to infinite loop when Usage Fault exception occurs */
;;;115      while (1)
000002  e7fe              B        |L14.2|
;;;116      {
;;;117      }
;;;118    }
;;;119    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\src\\stm32_it.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_stm32_it_c_bb8ca80c____REV16|
#line 129 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\3.20.4\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_stm32_it_c_bb8ca80c____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_stm32_it_c_bb8ca80c____REVSH|
#line 144
|__asm___10_stm32_it_c_bb8ca80c____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
